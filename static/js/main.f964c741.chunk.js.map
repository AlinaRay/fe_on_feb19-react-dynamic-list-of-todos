{"version":3,"sources":["components/util/TodoApi.js","components/util/UserApi.js","components/user/User.js","components/todo-item/TodoItem.js","components/todo-list/TodoList.js","App.js","index.js"],"names":["getAllTodos","fetch","then","response","json","getAllUsers","User","props","react_default","a","createElement","name","TodoItem","className","key","id","type","checked","completed","readOnly","text","user","SORT_ORDER_COMPLETED","order","SORT_ORDER_TITLE","SORT_ORDER_USER","TodoList","_ref","todos","onSort","elements","map","item","title","onClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_ref3","users","items","wrap","_context","prev","next","setState","isLoading","Promise","all","sent","slicedToArray","getTodosWithUsers","todosData","stop","todo","objectSpread","find","userId","state","sortField","todoData","handleSort","_callbackMap","callbackMap","defineProperty","b","localeCompare","callback","console","log","sort","_this$state","visibleTodos","sortTodos","disabled","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f964c741.chunk.js","sourcesContent":["export const getAllTodos = () => {\n    return fetch('https://jsonplaceholder.typicode.com/todos')\n        .then(response => response.json());\n};\n","export const getAllUsers = () => {\n    return fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json());\n};","import React from \"react\";\n\nexport default function User(props) {\n    return (\n        <span> {props.name} </span>\n    );\n}","import React from 'react';\nimport User from \"../user/User\";\n\n\nexport default function TodoItem(props) {\n    return (\n        <tr className=\"item\"\n            key={props.id}>\n            <td>\n                <input\n                    type=\"checkbox\"\n                    checked={props.completed}\n                    readOnly\n                />\n            </td>\n            <td>\n                <label\n                    className=\"label\">\n                    {props.text}\n                </label>\n            </td>\n            <td>\n                <User\n                    key={props.user.id}\n                    name={props.user.name}\n                />\n            </td>\n        </tr>\n    )\n}","import React from 'react'\nimport TodoItem from '../todo-item/TodoItem';\n\n// export const SORT_ORDER_COMPLETED = {name: 'completed', order: true};\nexport let SORT_ORDER_COMPLETED = {name: 'completed', order: true};\nexport let SORT_ORDER_TITLE = {name: 'title', order: true};\nexport let SORT_ORDER_USER = {name: 'user', order: true};\n\nexport default function TodoList({todos, onSort}) {\n    let elements = todos.map((item) => {\n        return (\n            <TodoItem key={item.id}\n                      completed={item.completed}\n                      id={item.id}\n                      text={item.title}\n                      user={item.user}\n            />\n        )\n    });\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th onClick={() => onSort(SORT_ORDER_COMPLETED)}>Status</th>\n                <th onClick={() => onSort(SORT_ORDER_TITLE)}>Task</th>\n                <th onClick={() => onSort(SORT_ORDER_USER)}>User</th>\n            </tr>\n            </thead>\n            <tbody>{elements}</tbody>\n        </table>)\n}\n","import React from 'react';\nimport {getAllTodos} from './components/util/TodoApi';\nimport {getAllUsers} from './components/util/UserApi';\nimport TodoList, {\n    SORT_ORDER_COMPLETED, SORT_ORDER_TITLE, SORT_ORDER_USER\n} from './components/todo-list/TodoList';\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortField: SORT_ORDER_TITLE,\n            isLoading: false,\n            todoData: [],\n        };\n\n        this.handleSort = (sortField) => {\n            this.setState(() => {\n                return {\n                    sortField: sortField\n                }\n            });\n        };\n    }\n\n    loadData = async () => {\n        this.setState({isLoading: true});\n        const [todos, users] = await Promise.all([\n            getAllTodos(),\n            getAllUsers(),\n        ]);\n        const items = this.getTodosWithUsers(todos, users);\n        this.setState({\n            todosData: items,\n            isLoading: false\n        });\n    };\n\n    getTodosWithUsers = (todos, users) => {\n        return todos.map(todo => {\n            return {\n                ...todo,\n                user: users.find(user => user.id === todo.userId)\n            };\n        });\n    };\n\n    sortTodos(todos, sortField) {\n        let order = sortField.order ? 1 : -1;\n\n        let callbackMap = {\n            [SORT_ORDER_TITLE.name]: (a, b) => a.title.localeCompare(b.title) * order,\n            [SORT_ORDER_USER.name]: (a, b) => a.user.name.localeCompare(b.user.name) * order,\n            [SORT_ORDER_COMPLETED.name]: (a, b) => (a.completed - b.completed) * order\n        };\n        const callback = callbackMap[sortField.name] || callbackMap.SORT_ORDER_TITLE;\n        if (todos) {\n            console.log(order);\n            sortField.order = !sortField.order;\n            return todos.sort(callback);\n        }\n    }\n\n\n    render() {\n        const {todosData, isLoading, sortField} = this.state;\n        const visibleTodos = this.sortTodos(todosData, sortField);\n        return (\n            <div className=\"App\">\n                <h1>React dynamic list of todos</h1>\n                {todosData ? (\n                    <TodoList\n                        todos={visibleTodos}\n                        onSort={this.handleSort}\n                    />\n\n                ) : (\n                    <button onClick={this.loadData}\n                            disabled={isLoading}>{isLoading ? \"loading\"\n                        : \"details\"}\n                    </button>\n\n                )}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}